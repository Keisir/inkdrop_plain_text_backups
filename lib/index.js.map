{"version":3,"sources":["../src/index.js"],"names":["module","exports","disposable","activate","inkdrop","isMobile","backupPath","utilities","getBackupPath","plainTextPath","getPlainTextPath","main","dataStore","getLocalDB","getDataAndWriteAllNotes","writeMaps","dataMap","components","registerClass","RestoreSidebar","default","layouts","insertComponentToLayoutAfter","layoutName","componentName","onChange","change","typeOfChange","id","split","bookPath","books","doc","bookId","title","notes","oldDataMap","getDataMap","fs","rename","writeNote","body","name","err","console","warn","deactivate","dispose","deleteClass"],"mappings":"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","sourcesContent":["import { promises as fs } from \"fs\";\nimport * as RestoreSidebar from \"./restore_sidebar\";\nimport utilities from \"./utilities\";\n\nmodule.exports = {\n    disposable: null,\n    async activate() {\n        if (inkdrop && !inkdrop.isMobile) {\n            const backupPath = utilities.getBackupPath();\n            if (backupPath) {\n                const plainTextPath = utilities.getPlainTextPath(backupPath);\n                this.disposable = inkdrop.main.dataStore.getLocalDB();\n                await utilities.getDataAndWriteAllNotes(\n                    this.disposable,\n                    plainTextPath\n                );\n                await utilities.writeMaps(plainTextPath, utilities.dataMap);\n\n                inkdrop.components.registerClass(RestoreSidebar.default);\n\n                inkdrop.layouts.insertComponentToLayoutAfter(\n                    RestoreSidebar.layoutName,\n                    \"SideBarMenuItemTrash\",\n                    RestoreSidebar.componentName\n                );\n\n                // Sync stuff on changes:\n                this.disposable.onChange(async (change) => {\n                    try {\n                        const typeOfChange = change.id.split(\":\")[0];\n\n                        switch (typeOfChange) {\n                            case \"note\":\n                                const bookPath = `${plainTextPath}/${\n                                    utilities.dataMap.books[change.doc.bookId]\n                                }`;\n\n                                // If the title has changed, rename the old note.\n                                if (\n                                    change?.doc?.title &&\n                                    change.doc.title !==\n                                        utilities.dataMap.notes[change.id].title\n                                ) {\n                                    const oldDataMap = await utilities.getDataMap(\n                                        plainTextPath\n                                    );\n\n                                    await fs.rename(\n                                        `${bookPath}/${\n                                            oldDataMap.notes[change.id].title\n                                        }.md`,\n                                        `${bookPath}/${change.doc.title}.md`\n                                    );\n                                    utilities.dataMap.notes[change.id].title =\n                                        change.doc.title;\n                                }\n                                await utilities.writeNote(\n                                    `${bookPath}/${change.doc.title}.md`,\n                                    change.doc.body\n                                );\n                                await utilities.writeMaps(\n                                    plainTextPath,\n                                    utilities.dataMap\n                                );\n\n                                break;\n                            case \"book\":\n                                if (\n                                    change?.doc?.name &&\n                                    change.doc.name !==\n                                        utilities.dataMap.books[change.id]\n                                ) {\n                                    const oldDataMap = await utilities.getDataMap(\n                                        plainTextPath\n                                    );\n\n                                    await fs.rename(\n                                        `${plainTextPath}/${\n                                            oldDataMap.books[change.id]\n                                        }`,\n                                        `${plainTextPath}/${change.doc.name}`\n                                    );\n\n                                    utilities.dataMap.books[change.id] =\n                                        change.doc.name;\n\n                                    await utilities.writeMaps(\n                                        plainTextPath,\n                                        utilities.dataMap\n                                    );\n                                }\n                                break;\n                        }\n                    } catch (err) {\n                        console.warn(\n                            \"Plain text backup may have had an issue:\",\n                            err\n                        );\n                    }\n                });\n            }\n        }\n    },\n\n    deactivate() {\n        if (inkdrop && !inkdrop.isMobile) {\n            if (this.disposable) {\n                this.disposable.dispose();\n            }\n            inkdrop.components.deleteClass(RestoreSidebar.default);\n        }\n    },\n};\n"],"file":"index.js"}