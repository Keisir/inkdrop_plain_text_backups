{"version":3,"sources":["../src/import_modal.js"],"names":["ImportModal","React","Component","constructor","props","CompositeDisposable","dialogRef","isShown","showDialog","dismissDialog","subscriptions","add","inkdrop","commands","document","body","toggle","componentWillUnmount","dispose","render","MessageDialog","components","classes","el","closable","autofocus","label","cancel","primary","caller","buttonIndex"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;;;;;AAEA,MAAMA,WAAN,SAA0BC,KAAK,CAACC,SAAhC,CAA0C;AAItCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN,EADe,CAGf;;AAHe,2CAFH,IAAIC,6BAAJ,EAEG;;AAAA,oCAWV,MAAM;AACX,YAAM;AAAEC,QAAAA;AAAF,UAAgB,IAAtB;;AACA,UAAI,CAACA,SAAS,CAACC,OAAf,EAAwB;AACpBD,QAAAA,SAAS,CAACE,UAAV;AACH,OAFD,MAEO;AACHF,QAAAA,SAAS,CAACG,aAAV;AACH;AACJ,KAlBkB;;AAIf,SAAKC,aAAL,CAAmBC,GAAnB,CACIC,OAAO,CAACC,QAAR,CAAiBF,GAAjB,CAAqBG,QAAQ,CAACC,IAA9B,EAAoC;AAChC,0CAAoC,KAAKC;AADT,KAApC,CADJ;AAKH;;AAWDC,EAAAA,oBAAoB,GAAG;AACnB,SAAKP,aAAL,CAAmBQ,OAAnB;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA;AAAF,QAAoBR,OAAO,CAACS,UAAR,CAAmBC,OAA7C;AAEA,wBACI,oBAAC,aAAD;AACI,MAAA,GAAG,EAAGC,EAAD,IAAQ;AACT,eAAQ,KAAKjB,SAAL,GAAiBiB,EAAzB;AACH,OAHL;AAII,MAAA,aAAa,EAAE;AAAEC,QAAAA,QAAQ,EAAE,KAAZ;AAAmBC,QAAAA,SAAS,EAAE;AAA9B,OAJnB;AAKI,MAAA,KAAK,EAAE,mBACH,+CACI;AAAG,QAAA,SAAS,EAAC;AAAb,QADJ,oCANR;AAWI,MAAA,OAAO,EAAE,CACL;AAAEC,QAAAA,KAAK,EAAE,IAAT;AAAeC,QAAAA,MAAM,EAAE;AAAvB,OADK,EAEL;AAAED,QAAAA,KAAK,EAAE,KAAT;AAAgBE,QAAAA,OAAO,EAAE;AAAzB,OAFK,CAXb;AAeI,MAAA,SAAS,EAAE,OAAOC,MAAP,EAAeC,WAAf,KAA+B;AACtC,YAAIA,WAAW,KAAK,CAApB,EAAuB;AACnB;AACA,gBAAM,2BAAN;AACH,SAHD,MAGO;AACH;AACA,iBAAO,IAAP;AACH;AACJ;AAvBL,oBAyBI,2GAEI,+BAFJ,eAGI,+BAHJ,+BAIgB,kCAAO,kCAAP,CAJhB,eAKI,+BALJ,eAMI,+BANJ,eAOI,+CAPJ,2GAzBJ,CADJ;AAuCH;;AAtEqC;;gBAApC9B,W,gBACkB,O;;eAwETA,W","sourcesContent":["import * as React from \"react\";\nimport { getPlainTextPath, importAll } from \"./utilities\";\nimport { CompositeDisposable } from \"event-kit\";\n\nclass ImportModal extends React.Component {\n    static layoutName = \"modal\";\n    subscriptions = new CompositeDisposable();\n\n    constructor(props) {\n        super(props);\n\n        // Register command that toggles this dialog:\n        this.subscriptions.add(\n            inkdrop.commands.add(document.body, {\n                \"plain_text_backups:toggle_dialog\": this.toggle,\n            })\n        );\n    }\n\n    toggle = () => {\n        const { dialogRef } = this;\n        if (!dialogRef.isShown) {\n            dialogRef.showDialog();\n        } else {\n            dialogRef.dismissDialog();\n        }\n    };\n\n    componentWillUnmount() {\n        this.subscriptions.dispose();\n    }\n\n    render() {\n        const { MessageDialog } = inkdrop.components.classes;\n\n        return (\n            <MessageDialog\n                ref={(el) => {\n                    return (this.dialogRef = el);\n                }}\n                modalSettings={{ closable: false, autofocus: true }}\n                title={() => (\n                    <span>\n                        <i className=\"redo icon\" />\n                        Import from plain text backups?\n                    </span>\n                )}\n                buttons={[\n                    { label: \"No\", cancel: true },\n                    { label: \"Yes\", primary: true },\n                ]}\n                onDismiss={async (caller, buttonIndex) => {\n                    if (buttonIndex === 1) {\n                        // User confirms restoration:\n                        await importAll();\n                    } else {\n                        // User rejects restoration:\n                        return true;\n                    }\n                }}\n            >\n                <p>\n                    Are you sure you want to import from your plain text notes?\n                    <br />\n                    <br />\n                    Located at: <code>{getPlainTextPath()}</code>\n                    <br />\n                    <br />\n                    <strong>WARNING:</strong> This will overwrite existing data\n                    with data from your plain text notes and COULD RESULT IN\n                    DATA LOSS.\n                </p>\n            </MessageDialog>\n        );\n    }\n}\n\nexport default ImportModal;\n"],"file":"import_modal.js"}