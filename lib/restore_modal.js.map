{"version":3,"sources":["../src/restore_modal.js"],"names":["RestoreModal","React","Component","open","dialog","isShown","showDialog","render","MessageDialog","inkdrop","components","classes","dia","closable","autofocus","label","cancel","primary","caller","buttonIndex"],"mappings":";;;;;;;AAAA;;AACA;;;;;;;;AAEA,MAAMA,YAAN,SAA2BC,KAAK,CAACC,SAAjC,CAA2C;AAAA;AAAA;;AAAA,oCAC9B,IAD8B;AAAA;;AAEvCC,EAAAA,IAAI,GAAG;AACH,QAAI,CAAC,KAAKC,MAAL,CAAYC,OAAjB,EAA0B;AACtB,WAAKD,MAAL,CAAYE,UAAZ;AACH;AACJ;;AAEDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA;AAAF,QAAoBC,OAAO,CAACC,UAAR,CAAmBC,OAA7C;AAEA,wBACI,oBAAC,aAAD;AACI,MAAA,GAAG,EAAGC,GAAD,IAAU,KAAKR,MAAL,GAAcQ,GADjC;AAEI,MAAA,aAAa,EAAE;AAAEC,QAAAA,QAAQ,EAAE,KAAZ;AAAmBC,QAAAA,SAAS,EAAE;AAA9B,OAFnB;AAGI,MAAA,KAAK,EAAE,mBACH,+CACI;AAAG,QAAA,SAAS,EAAC;AAAb,QADJ,qCAJR;AASI,MAAA,OAAO,EAAE,CACL;AAAEC,QAAAA,KAAK,EAAE,IAAT;AAAeC,QAAAA,MAAM,EAAE;AAAvB,OADK,EAEL;AAAED,QAAAA,KAAK,EAAE,KAAT;AAAgBE,QAAAA,OAAO,EAAE;AAAzB,OAFK,CATb;AAaI,MAAA,SAAS,EAAE,OAAOC,MAAP,EAAeC,WAAf,KAA+B;AACtC;;AACA,YAAIA,WAAW,KAAK,CAApB,EAAuB;AACnB;AACA,gBAAM,4BAAN;AACH,SAHD,MAGO;AACH;AACA,iBAAO,IAAP;AACH;AACJ;AAtBL,oBAwBI,gGAEM,kCAFN,OAxBJ,CADJ;AA+BH;;AA1CsC;;eA6C5BnB,Y","sourcesContent":["import * as React from \"react\";\nimport { getPlainTextPath, restoreAll } from \"./utilities\";\n\nclass RestoreModal extends React.Component {\n    dialog = null;\n    open() {\n        if (!this.dialog.isShown) {\n            this.dialog.showDialog();\n        }\n    }\n\n    render() {\n        const { MessageDialog } = inkdrop.components.classes;\n\n        return (\n            <MessageDialog\n                ref={(dia) => (this.dialog = dia)}\n                modalSettings={{ closable: false, autofocus: true }}\n                title={() => (\n                    <span>\n                        <i className=\"redo icon\" />\n                        Restore from plain text backups?\n                    </span>\n                )}\n                buttons={[\n                    { label: \"No\", cancel: true },\n                    { label: \"Yes\", primary: true },\n                ]}\n                onDismiss={async (caller, buttonIndex) => {\n                    debugger;\n                    if (buttonIndex === 1) {\n                        // User confirms restoration:\n                        await restoreAll();\n                    } else {\n                        // User rejects restoration:\n                        return true;\n                    }\n                }}\n            >\n                <p>\n                    Are you sure you want to restore from your plain text notes\n                    ({getPlainTextPath()})?\n                </p>\n            </MessageDialog>\n        );\n    }\n}\n\nexport default RestoreModal;\n"],"file":"restore_modal.js"}