{"version":3,"sources":["../src/restore_sidebar.js"],"names":["RestoreSidebar","React","Component","RestoreModal","open","render","SideBarMenuItem","inkdrop","components","classes","handleClick","name"],"mappings":";AAAA;;;;;;;AAEA;;AACA;;;;;;;;;;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA,MAAMA,cAAN,SAA6BC,KAAK,CAACC,SAAnC,CAA6C;AAAA;AAAA;;AAAA,yCAS3B,MAAM;AAChBC,6BAAaC,IAAb,GADgB,CAEhB;;AACH,KAZwC;AAAA;;AAczCC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA;AAAF,QAAsBC,OAAO,CAACC,UAAR,CAAmBC,OAA/C;AAEA,wBACI,oBAAC,eAAD;AACI,MAAA,SAAS,EAAC,qCADd;AAEI,MAAA,WAAW,EAAE,CAFjB;AAGI,MAAA,OAAO,EAAE,KAAKC,WAHlB;AAII,MAAA,UAAU,EAAE,MAAM;AACd,4BAAO;AAAG,UAAA,SAAS,EAAC;AAAb,UAAP;AACH;AANL,mBADJ;AAYH;;AA7BwC;;gBAAvCV,c,gBACkB,c;;gBADlBA,c,mBAAAA,cAEqB,CAAKW,I;;eA8BjBX,c","sourcesContent":["\"use babel\";\n\nimport * as React from \"react\";\nimport RestoreModal from \"./restore_modal\";\n\n// import { getPlainTextPath, restoreAll } from \"./utilities\";\n\n// const { MessageDialog, SideBarMenuItem } = inkdrop.components.classes;\n\n// const Modal = function (props) {\n//     const { MessageDialog } = inkdrop.components.classes;\n//     console.log(\"hey\");\n//     return (\n//         <MessageDialog\n//             modalSettings={{ closable: false, autofocus: true }}\n//             open={props.open}\n//             title={() => (\n//                 <span>\n//                     <i className=\"redo icon\" />\n//                     Restore from plain text backups?\n//                 </span>\n//             )}\n//             buttons={[\n//                 { label: \"No\", cancel: true },\n//                 { label: \"Yes\", primary: true },\n//             ]}\n//             onDismiss={async (caller, buttonIndex) => {\n//                 debugger;\n//                 if (buttonIndex === 1) {\n//                     // User confirms restoration:\n//                     await restoreAll();\n//                 } else {\n//                     // User rejects restoration:\n//                     return true;\n//                 }\n//             }}\n//         >\n//             <p>\n//                 Are you sure you want to restore from your plain text notes (\n//                 {getPlainTextPath()})?\n//             </p>\n//         </MessageDialog>\n//     );\n// };\n\n// This has to be an 'old-school' function because\n// it relies on the 'name' property.\nclass RestoreSidebar extends React.Component {\n    static layoutName = \"sidebar-menu\";\n    static componentName = this.name;\n    // state = { modalIsOpen: false };\n    // constructor(props) {\n    //     super(props);\n    //     this.state = { modalIsOpen: false };\n    // }\n\n    handleClick = () => {\n        RestoreModal.open();\n        // this.setState({ modalIsOpen: !this.state.modalIsOpen });\n    };\n\n    render() {\n        const { SideBarMenuItem } = inkdrop.components.classes;\n\n        return (\n            <SideBarMenuItem\n                className=\"plain_text_backups__restore_sidebar\"\n                indentLevel={0}\n                onClick={this.handleClick}\n                renderIcon={() => {\n                    return <i className=\"redo icon\" />;\n                }}\n            >\n                OVERWRITE\n            </SideBarMenuItem>\n        );\n    }\n}\n\nexport default RestoreSidebar;\n"],"file":"restore_sidebar.js"}